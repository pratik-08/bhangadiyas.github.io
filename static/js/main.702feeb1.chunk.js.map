{"version":3,"sources":["component/Contact.tsx","component/About.tsx","component/Home.tsx","utils/customeAPI.ts","component/Family.tsx","App.tsx","serviceWorker.js","index.js"],"names":["Contact","props","state","className","href","target","rel","Component","About","x","y","React","Home","personsData","id","name","birthDate","birthPlace","living","gender","spouses","current","children","parents","Family","getPersonData","console","log","data","personTemp","forEach","person","getPerson","JSON","stringify","setState","handleInputChange","event","value","friends","notes","create","bind","update","delete","handleChange","e","preventDefault","changeObject","this","placeholder","onChange","Button","variant","onClick","Table","Navigation","exact","activeClassName","to","Main","path","component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.702feeb1.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Contact extends Component {\n  constructor(props: Readonly<{}>) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  componentDidMount() {\n  }\n\n  render() {\n    return (\n      <div>\n        <div className='contact'>\n          <h1>Contact Me</h1>\n          <p>You can reach me via email: <strong>pratikagrawal2008@gmail.com</strong></p>\n          <h2>Remote Link</h2>\n          <a\n            className=\"App-link\"\n            href=\"https://pratik-08.github.io/bhangadiyas.github.io/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Bhangadiya's Family Tree\n        </a>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport { Contact };\n","import React, { Component } from 'react';\n\ninterface State {\n  x: string,\n  y: string\n}\n\ninterface Props {\n}\n\nclass About extends React.Component<Props, State> {\n  constructor(props: Readonly<{}>) {\n    super(props);\n\n    this.state = {\n      x: \"I am Pratik\",\n      y: \"I am Shikha\"\n    };\n  }\n\n  componentDidMount() {\n  }\n\n  render() {\n    return (\n      <div className='about'>\n        <h1>About Me</h1>\n        <p>Ipsum dolor dolorem consectetur est velit fugiat. Dolorem provident corporis fuga saepe distinctio ipsam? Et quos harum excepturi dolorum molestias?</p>\n        <p>Ipsum dolor dolorem consectetur est velit fugiat. Dolorem provident corporis fuga saepe distinctio ipsam? Et quos harum excepturi dolorum molestias?</p>\n      </div>\n    );\n  }\n}\n\n\nexport { About };\n","import React, { Component } from 'react';\n\nclass Home extends Component {\n  constructor(props: Readonly<{}>) {\n    super(props);\n\n    this.state = {\n    };\n  }\n\n  componentDidMount() {\n  }\n\n  render() {\n    return (\n      <div className='home'>\n        <h1>Welcome to our family tree website</h1>\n        <p> Feel free to browse around and learn more about us.</p>\n      </div>\n    );\n  }\n}\n\n\nexport { Home };\n","import * as Models from \"../models/models\";\n\nconst personsData: Models.Person[] =\n  [{\n    id: \"1\",\n    name: \"Paa\",\n    birthDate: \"8 Dec 1991\",\n    birthPlace: \"Basna, India\",\n    living: true,\n    gender: \"Male\",\n    spouses: [\n      {\n        id: \"2\",\n        name: \"Shikha\",\n        current: true,\n        gender: \"Female\"\n      }\n    ],\n    children: [\n      {\n        id: \"3\",\n        name: \"Prashu\",\n        gender: \"Male\"\n      },\n      {\n        id: \"4\",\n        name: \"Prashi\",\n        gender: \"Female\"\n      }\n    ],\n    parents: [\n      {\n        id: \"5\",\n        name: \"Prabhu\",\n        gender: \"Male\"\n      },\n      {\n        id: \"6\",\n        name: \"Anita\",\n        gender: \"Female\"\n      }\n    ]\n  },\n  {\n    id: \"2\",\n    name: \"Shikha\",\n    birthDate: \"28 Oct 1995\",\n    birthPlace: \"Kunra, India\",\n    living: true,\n    gender: \"Female\",\n    spouses: [\n      {\n        id: \"1\",\n        name: \"Paa\",\n        current: true,\n        gender: \"Male\"\n      }\n    ],\n    children: [\n      {\n        id: \"3\",\n        name: \"Prashu\",\n        gender: \"Male\"\n      },\n      {\n        id: \"4\",\n        name: \"Shipra\",\n        gender: \"Female\"\n      }\n    ],\n    parents: [\n      {\n        id: \"7\",\n        name: \"Shyam\",\n        gender: \"Male\"\n      },\n      {\n        id: \"8\",\n        name: \"Seema\",\n        gender: \"Female\"\n      }\n    ]\n  }\n  ];\n\nexport const getContact = async (): Promise<Object> => {\n  const data: Models.Contact =\n  {\n    phoneNumber: \"9999900000\",\n    emailAddress: \"p@a.com\"\n  };\n\n  return { data, response: new Response() };\n};\n\n\nexport const getPerson = (name: string): Models.Person => {\n  let personTemp: Models.Person = {};\n  personsData.forEach((person) => {\n    if (person.name === name) {\n      personTemp = person;\n    }\n  });\n  return personTemp;\n};\n","import React, { Component, Dispatch } from 'react';\r\nimport { Button, Table } from 'react-bootstrap';\r\nimport { getPerson } from '../utils/customeAPI';\r\nimport * as Models from \"../models/models\";\r\n\r\n\r\ninterface State {\r\n  name: string;\r\n  id: string;\r\n  notes: string;\r\n  friends: [];\r\n  person: Models.Person | null;\r\n}\r\n\r\n// interface ActionProps {\r\n//   onDoApply: (force?: boolean) => void;\r\n// }\r\n\r\ninterface Props {\r\n  onDoApply: (force?: boolean) => void;\r\n}\r\n\r\n// function bindActions(dispatch: Dispatch<any>): MappedActionProps<ActionProps> {\r\n//   return {\r\n//     onDoApply: (force?: boolean) => dispatch(doApply(force))\r\n//   }\r\n// }\r\n\r\nclass Family extends React.Component<Props, State>  {\r\n  constructor(props: Props) {\r\n    super(props);\r\n    this.state = {\r\n      friends: [],\r\n      name: '',\r\n      id: '',\r\n      notes: '',\r\n      person: null\r\n    };\r\n\r\n    this.create = this.create.bind(this);\r\n    this.update = this.update.bind(this);\r\n    this.delete = this.delete.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // get all entities - GET\r\n  }\r\n\r\n  create(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n    // add entity - POST\r\n    console.log(\"create ...!!!\");\r\n    e.preventDefault();\r\n  }\r\n\r\n  update(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n    // update entity - PUT\r\n    console.log(\"update ...!!!\");\r\n    e.preventDefault();\r\n  }\r\n\r\n  delete(e: React.MouseEvent<HTMLButtonElement, MouseEvent>) {\r\n    // delete entity - DELETE\r\n    console.log(\"delete ...!!!\");\r\n    e.preventDefault();\r\n  }\r\n\r\n  handleChange(changeObject: any) {\r\n    console.log(\"handleChange ...!!!\");\r\n    this.setState(changeObject)\r\n  }\r\n\r\n  private getPersonData = () => {\r\n    // const { onDoApply } = this.props;\r\n    if (this.state.name)\r\n      console.log(\"getPersonData value:\" + this.state.name);\r\n\r\n    // this will update entries with PUT\r\n    const data: Models.Person = getPerson(this.state.name);\r\n    // fetch(\"https://fairestdb.p.rapidapi.com/friend/friendModel\", {\r\n    //   \"method\": \"PUT\",\r\n    //   \"headers\": {\r\n    //     \"x-rapidapi-host\": \"fairestdb.p.rapidapi.com\",\r\n    //     \"x-rapidapi-key\": API_KEY,\r\n    //     \"content-type\": \"application/json\",\r\n    //     \"accept\": \"application/json\"\r\n    //   },\r\n    //   \"body\": JSON.stringify({\r\n    //     _id: this.state.id,\r\n    //     name: this.state.name,\r\n    //     notes: this.state.notes\r\n    //   })\r\n    // })\r\n    //   .then(response => response.json())\r\n    //   .then(response => {\r\n    //     console.log(response);\r\n    //   })\r\n    // //   .catch(err => { console.log(err); });\r\n    // onDoApply();\r\n\r\n    console.log(\"person data:\" + JSON.stringify(data));\r\n    this.setState({ person: data });\r\n\r\n  }\r\n\r\n  private handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    // if (event && event.target)\r\n    //   console.log(\"handleInputChange value:\" + event.target.value);\r\n\r\n    this.setState({ name: event.target.value });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div>\r\n          <div className=\"searchForm\">\r\n            <form>\r\n              <input\r\n                // class=\"form-control\"\r\n                placeholder=\"Search for...\"\r\n                value={this.state.name}\r\n                onChange={this.handleInputChange}\r\n              />\r\n              <br /><br />\r\n              <Button variant=\"primary\" onClick={this.getPersonData}>Get Person Data</Button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <br /><br />\r\n        {this.state.person && this.state.person !== {} && <div>\r\n          <Table id=\"global-table\">\r\n            <thead>\r\n              <tr className=\"header-row\">\r\n                <th>ID</th>\r\n                <th>Name</th>\r\n                <th>Birth Date</th>\r\n                <th>Birth Place</th>\r\n                <th>Gender</th>\r\n                <th>Spouse Name</th>\r\n                <th>Children Names</th>\r\n                <th>Mother</th>\r\n                <th>Father</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.person &&\r\n                <tr>\r\n                  <td>{this.state.person.id}</td>\r\n                  <td>{this.state.person.name}</td>\r\n                  <td>{this.state.person.birthDate}</td>\r\n                  <td>{this.state.person.birthPlace}</td>\r\n                  <td>{this.state.person.gender}</td>\r\n                  <td></td>\r\n                  <td></td>\r\n                  <td></td>\r\n                  <td></td>\r\n                </tr>\r\n              }\r\n            </tbody>\r\n          </Table>\r\n        </div>}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport { Family };\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Contact } from './component/Contact';\nimport { About } from './component/About';\nimport { Home } from './component/Home';\nimport { Family } from './component/Family';\nimport { NavLink, Switch, Route } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst Navigation = () => (\n  <nav>\n    <ul>\n      <li><NavLink exact activeClassName=\"current\" to='/bhangadiyas.github.io/'>Home</NavLink></li>\n      <li><NavLink exact activeClassName=\"current\" to='/bhangadiyas.github.io/component/Family'>Family</NavLink></li>\n      <li><NavLink exact activeClassName=\"current\" to='/bhangadiyas.github.io/component/About'>About</NavLink></li>\n      <li><NavLink exact activeClassName=\"current\" to='/bhangadiyas.github.io/component/Contact'>Contact</NavLink></li>\n    </ul>\n  </nav>\n);\n\nconst Main = () => (\n  <Switch>\n    <Route exact path='/bhangadiyas.github.io/' component={Home}></Route>\n    <Route exact path='/bhangadiyas.github.io/component/Family' component={Family}></Route>\n    <Route exact path='/bhangadiyas.github.io/component/About' component={About}></Route>\n    <Route exact path='/bhangadiyas.github.io/component/Contact' component={Contact}></Route>\n  </Switch>\n);\n\nclass App extends Component {\n  render() {\n    return (\n      <>\n        <div className='app'>\n          <h1>Bhangadiya's Family Tree</h1>\n          <Navigation />\n          <Main />\n        </div>\n      </>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// ReactDOM.render(<App />, document.getElementById('app'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}